slovar = {
    """class CharField(max_length=None, **options)""": """
    
    Строковое поле для хранения коротких или длинных строк.
    Для большого количества текстовой информации используйте TextField.
    Виджет по умолчанию для этого поля TextInput.
    CharField принимает один дополнительный аргумент:CharField.max_length""",
    """class DateField(auto_now=False, auto_now_add=False, **options)""": """

    Дата, представленная в виде объекта datetime.date Python. 
    Принимает несколько дополнительных параметров:

DateField.auto_now
Значение поля будет автоматически установлено в текущую дату при каждом сохранении объекта.
 Полезно для хранения времени последнего изменения. 
 Заметим, что текущее время будет использовано всегда; 
 это не просто значение по умолчанию, которое вы можете переопределить.
 
 DateField.auto_now_add
Значение поля будет автоматически установлено в текущую дату при создании(первом сохранении) объекта.
 Полезно для хранения времени создания. Заметим, что текущее время будет использовано всегда;
  это не просто значение по-умолчанию, которое вы можете переопределить. 
  По этому, даже если вы укажите значение для этого поля, оно будет проигнорировано.
   Если вы хотите изменять значения этого поля, используйте следующее вместо auto_now_add=True:""",
    """class DateTimeField(auto_now=False, auto_now_add=False, **options)¶""": """

   Дата и время, представленные объектом datetime.datetime Python. 
   Принимает аналогичные параметры что и DateField.

Виджет по умолчанию в форме для этого поля - TextInput. Интерфейс администратора
 использует два виджета TextInput и JavaScript.""",
    """class DurationField(**options)""": """

   Поля для хранения периодов времени - используется объект Python timedelta.
Для PostgreSQL используется тип interval, а в Oracle – INTERVAL DAY(9) TO SECOND(6).
Иначе используется bigint, в котором хранится количество микросекунд.""",
    """class EmailField(max_length=254, **options)""": """

   Строковое поле для хранения коротких или длинных строк.
   A CharField that checks that the value is a valid email address using EmailValidator.
FileField""",
    """class FileField(upload_to=None, max_length=100, **options)¶""": """

Поле для загрузки файла
FileField.upload_to
Этот атрибут позволяет указать каталог и название файла при его сохранении. Его можно использовать двумя способами. 
В обоих случаях значение будет передано в метод Storage.save().""",

}